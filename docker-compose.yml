version: "3.9"

services:
  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"
    logging:
      driver: 'json-file'
      options:
        max-file: '10'
        max-size: '200k'

# Для Windows-Docker
  PostgresDB:
    image: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=1
      - POSTGRES_USER=BlizNewsUser
      - POSTGRES_DB=BlizNewsDB
#      - POSTGRES_HOST_AUTH_METHOD=POSTGRES_PASSWORD
    volumes:
      - pg_project:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    logging:
      driver: 'json-file'
      options:
        max-file: '10'
        max-size: '200k'

# Для VPS-Docker
#  PostgresDB:
#    image: 'bitnami/postgresql:latest'
#    restart: always
#    environment:
#      - POSTGRES_USER=bliznewsuser
#      - POSTGRES_DB=bliznewsdb
#      - POSTGRES_PASSWORD=1
##      - POSTGRES_USER=BlizNewsUser
##      - POSTGRES_DB=BlizNewsDB
##      - POSTGRES_HOST_AUTH_METHOD=POSTGRES_PASSWORD
#    volumes:
#      - pg_project:/var/lib/postgresql/data
#    ports:
#      - ${POSTGRES_PORT:-5432}:5432
#    logging:
#      driver: 'json-file'
#      options:
#        max-file: '10'
#        max-size: '200k'

  celery:
    container_name: worker
    restart: always
    build:
      context: .
    volumes:
      - pg_project:/var/lib/postgresql/data
    command: [ "celery", "-A", "BlizNews", "worker", "-l", "info", '-P', 'eventlet']
    depends_on:
      - redis
      - app
    logging:
      driver: 'json-file'
      options:
        max-file: '10'
        max-size: '200k'


  app:
    restart: always
    build:
      dockerfile: ./Dockerfile
      context: .
    volumes:
      - pg_project:/var/lib/postgresql/data
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    ports:
      - "8000:8000"
    command: bash -c "python manage.py makemigrations &&
      python manage.py migrate &&
      gunicorn BlizNews.wsgi:application --bind 0.0.0.0:8000 &&
      python manage.py createsuperuser admin admin"
    logging:
      driver: 'json-file'
      options:
        max-file: '10'
        max-size: '200k'

  nginx:
    image: nginx
    build:
      dockerfile: ./Dockerfile_nginx
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    ports:
      - 1337:80
    depends_on:
      - app
    links:
      - app

volumes:
  pg_project:
  static_volume:
  media_volume:
